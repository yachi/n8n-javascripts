// Simple test for main.js
// This creates a standalone version for testing the n8n script

const fs = require('fs');

// Import formatDate from main.js to avoid code duplication
function getFormatDateFromMain() {
  const mainCode = fs.readFileSync('./main.js', 'utf8');
 
  // Extract formatDate function from main.js
  const formatDateMatch = mainCode.match(/function formatDate\(dateStr\) \{[\s\S]*?\n\}/);
  if (!formatDateMatch) {
    throw new Error('formatDate function not found in main.js');
  }
 
  // Create and return the function
  const formatDateCode = formatDateMatch[0];
  const AsyncFunction = Object.getPrototypeOf(async function(){}).constructor;
  const func = new Function('return ' + formatDateCode)();
  return func;
}

// Test formatDate function for the n8n error fix
function testDateFormatting() {
  console.log('🧪 Testing formatDate function (n8n error fix)');
  console.log('━'.repeat(40));

  try {
    const formatDate = getFormatDateFromMain();
   
    const testCases = [
      { input: 20241209, expected: '2024-12-09', desc: 'Numeric (n8n TARGETDATE)' },
      { input: '20241209', expected: '2024-12-09', desc: 'String YYYYMMDD' },
      { input: '2024-12-09T10:30:00', expected: '2024-12-09', desc: 'ISO with time' },
    ];
  
    let allPassed = true;
    testCases.forEach(test => {
      const result = formatDate(test.input);
      const passed = result === test.expected;
      console.log(`${passed ? '✅' : '❌'} ${test.desc}: ${test.input} → ${result}`);
      if (!passed) allPassed = false;
    });
  
    console.log('━'.repeat(40));
    console.log(allPassed ? '✅ All date tests passed!\n' : '❌ Some date tests failed!\n');
    return allPassed;
  } catch (error) {
    console.log('❌ Failed to load formatDate from main.js:', error.message);
    console.log('━'.repeat(40));
    console.log('❌ Date tests failed!\n');
    return false;
  }
}

(async function() {
  // Run date formatting tests first
  testDateFormatting();

  console.log('📺 Demo: main.js output format');
  console.log('😊 Clean and simple UK Green Energy Outlook');
  console.log('✅ Using facial expressions for ratings');
  console.log('');

  // Show sample output format
  console.log('🔄 Sample output format:\n');

  const sampleMessage = `🌱 **UK Green Energy Outlook**

📊 Yesterday: **67% green energy** 😊

📈 This week: **61% renewable** 😊

**Mon** 😍 85% █████████░
**Tue** 😊 72% ███████░░░
**Wed** 😊 68% ██████░░░░
**Thu** 😐 45% ████░░░░░░
**Fri** 😕 32% ███░░░░░░░
**Sat** 😊 64% ██████░░░░
**Sun** 😊 71% ███████░░░

🏆 Best: Mon (85%)
⚡ Lowest: Fri (32%)

💭 Good renewable energy week expected.`;

  console.log(sampleMessage);
  console.log('\n✅ This is the format generated by main.js in n8n');
})();